name: CI - Build & E2E Tests

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Restore NuGet packages
        run: nuget restore WebApp.sln

      - name: Build Solution with MSBuild
        shell: pwsh
        run: msbuild WebApp.sln /p:Configuration=Debug

      - name: Install Playwright dependencies
        run: npm install
        working-directory: PlaywrightTests

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: PlaywrightTests

      - name: Start IIS Express
        shell: pwsh
        id: start_iis
        run: |
          $iisPath = "${env:ProgramFiles(x86)}\IIS Express\iisexpress.exe"
          $webProjectPath = "$env:GITHUB_WORKSPACE\WebsiteGym.Web"
          # Start IIS Express și salvează PID-ul în variabilă output
          $process = Start-Process -FilePath $iisPath -ArgumentList "/path:`"$webProjectPath`"", "/port:44336" -PassThru
          Write-Host "Started IIS Express with PID $($process.Id)"
          # Așteaptă puțin înainte de retry-uri să pornească
          Start-Sleep -Seconds 3
          echo "::set-output name=iis_pid::$($process.Id)"

      - name: Wait for IIS site to be available
        shell: pwsh
        run: |
          $maxRetries = 15
          $success = $false
          for ($i = 0; $i -lt $maxRetries; $i++) {
            try {
              Invoke-WebRequest -Uri http://localhost:44336 -UseBasicParsing -TimeoutSec 5
              Write-Host "IIS site is up!"
              $success = $true
              break
            } catch {
              Write-Host "IIS not up yet, retrying... attempt $($i+1) of $maxRetries"
              Start-Sleep -Seconds 3
            }
          }
          if (-not $success) {
            Write-Error "IIS Express did not start in time"
            exit 1
          }

      - name: Run Playwright tests
        run: npx playwright test --project=chromium
        working-directory: PlaywrightTests

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: PlaywrightTests/playwright-report

      - name: Stop IIS Express
        if: always()
        shell: pwsh
        run: |
          $pid = ${{ steps.start_iis.outputs.iis_pid }}
          if ($pid) {
            Write-Host "Stopping IIS Express with PID $pid"
            Stop-Process -Id $pid -Force
          } else {
            Write-Host "No IIS Express PID found, nothing to stop"
          }
