name: CI - Build & E2E Tests

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Restore NuGet packages
        run: nuget restore WebApp.sln

      - name: Build Solution with MSBuild
        shell: pwsh
        run: msbuild WebApp.sln /p:Configuration=Debug

      - name: Install Playwright dependencies
        run: npm install
        working-directory: PlaywrightTests

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: PlaywrightTests

      - name: Start IIS Express with config
        shell: pwsh
        run: |
          $iisPath = "${env:ProgramFiles(x86)}\IIS Express\iisexpress.exe"
          $webProjectPath = "$env:GITHUB_WORKSPACE\WebsiteGym.Web"
          $configTemplate = "$env:GITHUB_WORKSPACE\iisconfig\applicationhost.config"
          $configActual = "$env:GITHUB_WORKSPACE\iisconfig\actual.config"

          # Înlocuiește C:\site cu path-ul real
          (Get-Content $configTemplate) -replace 'C:\\site', $webProjectPath | Set-Content $configActual

          Start-Process -FilePath $iisPath `
            -ArgumentList "/config:$configActual", "/site:WebsiteGym.Web", "/trace:error" `
            -NoNewWindow

          Start-Sleep -Seconds 5

      - name: Wait for port to open
        shell: pwsh
        run: |
          $port = 44336
          $retries = 15
          $ok = $false

          for ($i = 1; $i -le $retries; $i++) {
            Write-Host "⏳ Checking port $port... attempt $i of $retries"
            $result = Test-NetConnection -ComputerName "localhost" -Port $port
            if ($result.TcpTestSucceeded) {
              Write-Host "✅ Port $port is open!"
              $ok = $true
              break
            }
            Start-Sleep -Seconds 2
          }

          if (-not $ok) {
            Write-Error "❌ Port $port is NOT open after $retries attempts"
            exit 1
          }

      - name: Run Playwright tests
        run: npx playwright test --project=chromium
        working-directory: PlaywrightTests

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: PlaywrightTests/playwright-report

      - name: Stop IIS Express
        shell: pwsh
        run: |
          $iisPath = "${env:ProgramFiles(x86)}\IIS Express\iisexpress.exe"
          $processes = Get-Process -Name iisexpress -ErrorAction Silent
          if ($processes) {
            Write-Host "Stopping IIS Express..."
            Stop-Process -Name iisexpress -Force
            Write-Host "IIS Express stopped."
          } else {
            Write-Host "IIS Express is not running."
          }