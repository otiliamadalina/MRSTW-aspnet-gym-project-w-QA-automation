name: Build and Run ASP.NET Website

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Restore NuGet packages
        run: nuget restore WebApp.sln

      - name: Locate MSBuild
        id: msbuild
        run: |
            $msbuildPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" `
            -latest -products * `
            -requires Microsoft.Component.MSBuild `
            -find MSBuild\**\Bin\MSBuild.exe
            echo "MSBUILD=$msbuildPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            shell: pwsh

      - name: Build solution with MSBuild
        run: |
          & "$env:MSBUILD" WebApp.sln /p:Configuration=Debug /t:Rebuild
        shell: pwsh

      - name: Start IIS Express
        run: |
          Start-Process "C:\Program Files\IIS Express\iisexpress.exe" `
            -ArgumentList '/path:"WebsiteGym.Web"', '/port:44336' `
            -NoNewWindow
        shell: pwsh

      - name: Wait for website to start
        run: |
          for ($i = 0; $i -lt 10; $i++) {
            try {
              $response = Invoke-WebRequest -Uri https://localhost:44336 -UseBasicParsing -SkipCertificateCheck
              if ($response.StatusCode -eq 200) { break }
            } catch {}
            Start-Sleep -Seconds 3
          }

      - name: Run tests (Playwright or other)
        run: |
          npm ci
          npx playwright install
          npx playwright test
