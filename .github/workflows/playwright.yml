name: Run Playwright Tests on IIS Express

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest
    env:
      WEB_PROJECT_PATH: ${{ github.workspace }}\WebsiteGym.Web
      IIS_EXPRESS_PATH: 'C:\Program Files\IIS Express\iisexpress.exe'
      IIS_PORT: 44336

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Start IIS Express on port 5000
      shell: pwsh
      run: |
        Write-Host "Starting IIS Express with path: $env:WEB_PROJECT_PATH and port: $env:IIS_PORT"
        Start-Process -FilePath $env:IIS_EXPRESS_PATH -ArgumentList "/path:`"$env:WEB_PROJECT_PATH`" /port:$env:IIS_PORT" -NoNewWindow
        Write-Host "Waiting for IIS Express to start..."
        $maxAttempts = 15
        $attempt = 0
        do {
          Start-Sleep -Seconds 2
          $isListening = netstat -ano | Select-String ":$env:IIS_PORT"
          $attempt++
          if ($isListening) {
            Write-Host "Port $env:IIS_PORT is now listening."
            break
          } else {
            Write-Host "Port $env:IIS_PORT not open yet, retrying... attempt $attempt of $maxAttempts"
          }
        } while ($attempt -lt $maxAttempts)

        if (-not $isListening) {
          Write-Error "Port $env:IIS_PORT is NOT open after $maxAttempts attempts"
          exit 1
        }

    - name: Test IIS Express HTTP endpoint
      shell: pwsh
      run: |
        try {
          $response = Invoke-WebRequest http://localhost:$env:IIS_PORT/ -UseBasicParsing -TimeoutSec 10
          if ($response.StatusCode -eq 200) {
            Write-Host "IIS Express responded with status 200 OK"
          } else {
            Write-Error "Unexpected status code: $($response.StatusCode)"
            exit 1
          }
        } catch {
          Write-Error "Failed to connect to IIS Express: $_"
          exit 1
        }

    - name: Install dependencies
      run: npm ci
      working-directory: PlaywrightTests

    - name: Run Playwright tests
      run: npx playwright test
      working-directory: PlaywrightTests

    - name: Kill IIS Express
      if: always()
      shell: pwsh
      run: |
        Get-Process iisexpress -ErrorAction SilentlyContinue | Stop-Process -Force